name: Deploy Python Lambda API

on:
  push:
    branches:
      - release/1.0.0

env:
  AWS_REGION : us-east-1 #Change to reflect your Region

permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkou


jobs:
  AssumeRoleAndCallIdentity:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::008971636495:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 2 # To fetch the current commit and its parent (so we can compare)

    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::008971636495:role/GitHubAction-AssumeRoleWithAction #change to reflect your IAM roleâ€™s ARN
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}
        # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # aws-region: us-east-1 

    - name: Print changed files # To properly debug what is being deployed (It can be removed).
      run: |
        echo "List of changed files:" 
        echo $(git diff --name-only HEAD^ HEAD)

    - name: Deploy Modified Files
      run: |
        aws cloudformation deploy \
            --template-file cloudformations/00_foundation.yaml \
            --stack-name foundation \
            --tags name=foundation

        # Getting the GeneralBucketName 

        GeneralBucketName=$(aws cloudformation describe-stacks \
            --stack-name foundation \
            --query 'Stacks[0].Outputs[?OutputKey==`GeneralBucketName`].OutputValue' \
            --output text)

        # Deploying the API

        cfndir=$PWD
        cd api
        pip install -r requirements.txt -t .
        cd $cfndir


        aws cloudformation package \
            --template-file cloudformations/01_api.yaml \
            --s3-bucket $GeneralBucketName \
            --s3-prefix infrastructure/api \
            --output-template-file cloudformations/01_api_generated.yaml \


        # TODO: Upload to bucket. 

        aws cloudformation deploy \
            --template-file cloudformations/01_api_generated.yaml \
            --stack-name listtracker-api \
            --capabilities CAPABILITY_IAM \
            --capabilities CAPABILITY_NAMED_IAM


